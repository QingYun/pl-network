{"ns:m.0ckh_r":{"rdfs:label":["Significantly Prettier and Easier C++ Syntax"],"key:en":["significantly_prettier_and_easier_cplusplus_syntax"],"ns:common.topic.article":[{"ns:common.document.text":["Significantly Prettier and Easier C++ Syntax or SPECS is an alternative syntactic binding for the semantics of C++.\\nDesigned by Ben Werther and Damian Conway, SPECS has a LALR(1) parsable grammar, which means it is significantly easier to parse than standard C++ syntax, both for computers and for humans alike. Also unlike standard C++ syntax, in SPECS declarations do not look like uses. For example, the fundamental C++ allocation control function set_new_handler has this declaration in orthodox C++ syntax:\\nwhich in SPECS becomes:\\nand using typedefs in C++:\\nand in SPECS:\\nwhich in words can be described as function which both takes as an argument and returns, a pointer to a function that takes no arguments and returns void.\\nApart from the declaration syntax change, the template syntax is changed to use <[ ]> brackets to make the template keyword unnecessary, several overloaded syntax elements are separated for clarity,Â := is used for assignment (instead of =), = is used for comparison (instead of ==), blocks for if-, for- and while-statements are mandatory, and there is no fallthrough for switch-statements."],"ns:common.document.source_uri":["<http://wp/en/4733398>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Significantly Prettier and Easier C++ Syntax"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125h6qztn"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}