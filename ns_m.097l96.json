{"ns:m.097l96":{"ns:common.topic.description":["MIIS is a MUMPS-like programming language that was created by A.Neil Pappalardo and Curt W. Marble, on a DEC PDP at Mass General Hospital from 1964 to 1968. MUMPS evolution took two major directions: MUMPS proper and MIIS. MUMPS became an ANSI and ISO-standard language. When many MUMPS implementations standardized to be compatible, MIIS did not standardize, but became a proprietary system instead.\\nAs an example of the differences between MUMPS and MIIS, the value of a logical expression in MUMPS may be false = zero or true = non-zero, canonically, one. In MIIS, the value false is the empty string and the value of true is a string consisting of the ASCII delete character.\\nThere is also a philosophical difference between the dialects. MIIS often takes the approach that code should march along, regardless of possible errors, where MUMPS will error out to prevent more serious problems. For example, when encountering an undefined variable, MUMPS generates an error where MIIS treats it as nil.\\nIn the 1980s Brigham and Women's Hospital in Massachusetts used MIIS to program their Data General Mainframe."],"rdfs:label":["MIIS"],"key:en":["miis_programming_language"],"ns:common.topic.article":[{"ns:common.document.text":["MIIS (Meditech Interpretive Information System) is a MUMPS-like programming language developed by Meditech in the 1970s. Early development of MUMPS is credited to A. Neil Pappalardo and Octo Barnett of Massachusetts General Hospital. MUMPS evolution took two major directions: MUMPS proper and MIIS. MUMPS became an ANSI and ISO-standard language. When many MUMPS implementations standardized to be compatible, MIIS did not standardize, but became a proprietary system instead.\\nAs an example of the differences between MUMPS and MIIS, the value of a logical expression in MUMPS may be false = zero (0) or true = non-zero, canonically, one (1). In MIIS, the value false is the ASCII character \\\"nul\\\" (byte with all 0 bits = binary 0) and the value of true is \\\"del\\\" (7 bits of a byte with all 1 bits = binary 127). (note: ASCII is not an 8-bit standard, but a 7-bit standard).\\nThere is also a philosophical difference between the dialects. MIIS often takes the approach that code should march along, regardless of possible errors, where MUMPS will error out to prevent more serious problems. For example, when encountering an undefined variable, MUMPS generates an error where MIIS treats it as nil.\\nIn"],"ns:common.document.source_uri":["<http://wp/en/3359079>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["MIIS"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125bbbkfs"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}