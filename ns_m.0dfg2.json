{"ns:m.0dfg2":{"rdfs:label":["Pliant"],"key:en":["pliant"],"ns:common.topic.article":[{"ns:common.document.text":["In computer software programming languages history, Pliant is the first attempt to connect C and LISP branches.\\nIt was written by Hubert Tonneau, first published in 1999, and is released under GNU General Public License version 2.\\nBring raw efficiency and high expressivity at once.\\nFocus on program encoding as opposed to language features.\\nPliant is based on two main main concepts:\\nFirst, the program is successively encoded in four precisely defined models:\\nThen, the three transitions between these four models can freely be changed at application level because the compiler is dynamic and reflexive.\\nAs a result, Pliant meta programming is no more defined as syntactical rewriting as in LISP, but as a transition from the free semantic expressions tree model to the fixed semantic and efficient instructions list model. It has two consequences:\\nA full computing system, named FullPliant has since been provided that is:"],"ns:common.document.source_uri":["<http://wp/en/50872>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Pliant"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125ftkp4c"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}