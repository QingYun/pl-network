{"ns:m.0jwqb":{"rdfs:label":["Hardware description language"],"ns:freebase.linguistic_hint.subject_form":["Hardware description languages"],"ns:common.topic.description":["In electronics, a hardware description language is a specialized computer language used to program the structure, design and operation of electronic circuits, and most commonly, digital logic circuits.\\nA hardware description language enables a precise, formal description of an electronic circuit that allows for the automated analysis, simulation, and simulated testing of an electronic circuit. It also allows for the compilation of an HDL program into a lower level specification of physical electronic components, such as the set of masks used to create an integrated circuit.\\nA hardware description language looks much like a programming language such as C; it is a textual description consisting of expressions, statements and control structures. One important difference between most programming languages and HDLs is that HDLs explicitly include the notion of time.\\nHDLs form an integral part of electronic design automation systems, especially for complex circuits, such as microprocessors."],"key:en":["hardware_description_language"],"ns:base.schemastaging.context_name.pronunciation":[{"ns:base.schemastaging.pronunciation.yomigana":["ハードウェアきじゅつげんご"],"rdf:type":["ns:base.schemastaging.pronunciation"]}],"ns:common.topic.article":[{"ns:common.document.text":["In electronics, a hardware description language or HDL is any language from a class of computer languages, specification languages, or modeling languages for formal description and design of electronic circuits, and most commonly, digital logic. It can describe the circuit's operation, its design and organization, and tests to verify its operation by means of simulation.\\nHDLs are standard text-based expressions of the spatial and temporal structure and behaviour of electronic systems. Like concurrent programming languages, HDL syntax and semantics include explicit notations for expressing concurrency. However, in contrast to most software programming languages, HDLs also include an explicit notion of time, which is a primary attribute of hardware. Languages whose only characteristic is to express circuit connectivity between a hierarchy of blocks are properly classified as netlist languages used on electric computer-aided design (CAD).\\nHDLs are used to write executable specifications for hardware. A program designed to implement the underlying semantics of the language statements and simulate the progress of time provides the hardware designer with the ability to model a piece of"],"ns:common.document.source_uri":["<http://wp/en/74554>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Hardware description language"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1257y46gb"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}