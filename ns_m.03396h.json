{"ns:m.03396h":{"rdfs:label":["Larch family"],"ns:common.topic.description":["The Larch family of formal specification languages are intended for the precise specification of computing systems. They allow the clean specification of computer programs and the formulation of proofs about program behavior.\\nThe Larch family was developed primarily in the United States in the 1980s and 1990s, involving researchers at Xerox PARC, DEC/SRC, MIT, and other places. Unlike the Z notation, the Larch family has one language for algebraic specification of abstract data types, and a separate interface language tailored to each language in which programs are to be written. The Larch project also developed tools to support the use of formal specifications, including LP, the Larch Prover."],"key:en":["larch_family"],"ns:common.topic.article":[{"ns:common.document.text":["The Larch family of formal specification languages are intended for the precise specification of computing systems. They allow the clean specification of computer programs and the formulation of proofs about program behavior.\\nThe Larch family was developed primarily in the United States in the 1980s and 1990s, involving researchers at Xerox PARC, DEC/SRC, MIT, and other places. Unlike the Z notation, the Larch family has one language for algebraic specification of abstract data types (LSL, the Larch Shared Language), and a separate interface language tailored to each language in which programs are to be written (Modula-3, C, Smalltalk, etc.). The Larch project also developed tools to support the use of formal specifications, including LP, the Larch Prover."],"ns:common.document.source_uri":["<http://wp/en/693091>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Larch family"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125h43c35"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}