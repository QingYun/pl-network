{"ns:m.02jnml":{"ns:common.topic.description":["At least two programming languages are known as PL/0. One is a subset of IBM's general-purpose programming language PL/I.\\nThe other PL/0, covered here, is similar to but much simpler than the general-purpose programming language Pascal, intended as an educational programming language. It serves as an example of how to construct a compiler. It was originally introduced in the book, Algorithms + Data Structures = Programs, by Niklaus Wirth in 1975. It features quite limited language constructs: there are no real numbers, very few basic arithmetic operations and no control-flow constructs other than \\\"if\\\" and \\\"while\\\" blocks. While these limitations make writing real applications in this language impractical, it helps the compiler remain compact and simple."],"rdfs:label":["PL/0"],"key:en":["pl_0"],"ns:common.topic.article":[{"ns:common.document.text":["At least two programming languages are known as PL/0. One is a subset of IBM's general-purpose programming language PL/I.\\nThe other PL/0, covered here, is similar to but much simpler than the general-purpose programming language Pascal, intended as an educational programming language. It serves as an example of how to construct a compiler. It was originally introduced in the book, Algorithms + Data Structures = Programs, by Niklaus Wirth in 1975. It features quite limited language constructs: there are no real numbers, very few basic arithmetic operations and no control-flow constructs other than \\\"if\\\" and \\\"while\\\" blocks. While these limitations make writing real applications in this language impractical, it helps the compiler remain compact and simple.\\nThe following is the syntax rules of the model language defined in EBNF:\\nIt is rather easy for students to write a recursive descent parser for such a simple syntax. Therefore, the PL/0 compiler is still widely used in courses on compiler construction throughout the world. Due to the lack of features in the original specification, students usually spend most of their time with extending the language and their compiler. They usually"],"ns:common.document.source_uri":["<http://wp/en/507221>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.language_designers":["Niklaus Wirth"],"ns:type.object.name":["PL/0"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1255tbsm2"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}