{"ns:m.0swpzmh":{"ns:common.topic.description":["Idris is a general-purpose purely functional programming language with dependent types. The type system is similar to the one used by Agda.\\nThe language supports interactive theorem-proving comparable to Coq, including tactics, while the focus remains on general-purpose programming even before theorem-proving. Other goals of Idris are \\\"sufficient\\\" performance, easy management of side-effects and support for implementing embedded domain specific languages.\\nAs of October 2014, Idris compiles to C and relies on a custom copying garbage collector using Cheney's algorithm. There also exist JavaScript and Java backends, and a partial LLVM backend.\\nThe name Idris goes back to the character of the singing dragon in the 70's UK kids' program Ivor the Engine."],"rdfs:label":["Idris"],"ns:common.topic.article":[{"ns:common.document.source_uri":["<http://wp/en/39035048>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.language_designers":["Edwin Brady"],"ns:type.object.name":["Idris"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1yl5y2mrr"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.0dsbpg6"],"ns:computer.programming_language.language_paradigms":["ns:m.02ykw"]}}