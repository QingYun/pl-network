{"ns:m.0gy1vx_":{"key:authority.google.google_plus_page":["106948838673607430453"],"ns:common.topic.description":["Opa is an open source programming language for developing scalable web applications.\\nIt can be used for both client-side and server-side scripting, where complete programs are written in Opa and subsequently compiled to Nodejs on the server and JavaScript on the client, with the compiler automating all communication between the two. Opa implements strong, static typing, which can be helpful in protecting against security issues such as SQL injections and cross-site scripting attacks.\\nThe language was first officially presented at the OWASP conference in 2010, and the source code was released on GitHub in June 2011, under a GNU Affero General Public License. Later, the license changed to the MIT license for the framework part and AGPL for the compiler so that applications written in Opa can be released under any license, proprietary or open source."],"rdfs:label":["Opa"],"ns:common.topic.social_media_presence":["<http://plus.google.com/106948838673607430453>"],"ns:common.topic.official_website":["<http://www.opalang.org>"],"ns:computer.programming_language.language_designers":[],"ns:common.topic.article":[{"ns:common.document.text":["Opa is an open source programming language for developing scalable web applications.\\nIt can be used for both client-side and server-side scripting, where complete programs are written in Opa and subsequently compiled to native code on the server and JavaScript on the client, with the compiler automating all communication between the two. Opa implements strong, static typing, which can be helpful in protecting against security issues such as SQL injections and cross-site scripting attacks.\\nThe language was first officially presented at the OWASP conference in 2010, and the source code was released on GitHub in June 2011, under a GNU Affero General Public License.\\nOpa consists of a web server, a database and distributed execution engine. Code written in Opa is compiled to native code on the server side and to JavaScript using jQuery for cross-browser compatibility on the client side. The advantage of the approach compared to certain Rich Internet Application (RIA) platforms is that users are not required to install a plugin in their browser. Opa shares motivations with web frameworks, but takes a different approach. Its designers assert that this helps Opa to avoid many security"],"ns:common.document.source_uri":["<http://wp/en/32976878>"],"rdf:type":["ns:common.document"]}],"ns:common.topic.webpage":[{"ns:common.webpage.uri":["<http://opalang.org>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.0gy1vx_"]}],"ns:computer.programming_language.introduced":["2011"],"ns:type.object.name":["Opa"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1q5j57fnv"],"ns:computer.programming_language.language_paradigms":["ns:m.02ykw"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.055mc"]}}