{"ns:m.01kbt7":{"rdfs:label":["D"],"ns:common.topic.description":["The D programming language is an object-oriented, imperative, multi-paradigm system programming language created by Walter Bright of Digital Mars and Andrei Alexandrescu. Though it originated as a re-engineering of C++, D is a distinct language, having redesigned some core C++ features while also taking inspiration from other languages, notably Java, Python, Ruby, C#, and Eiffel.\\nD's design goals attempt to combine the performance and safety of compiled languages with the expressive power of modern dynamic languages. Idiomatic D code is commonly as fast as equivalent C++ code, while being shorter and memory-safe.\\nType inference, automatic memory management and syntactic sugar for common types allow faster development, while bounds checking, design by contract features and a concurrency-aware type system help reduce the occurrence of bugs."],"key:en":["d"],"ns:common.topic.official_website":["<http://www.digitalmars.com/d/>"],"ns:base.schemastaging.context_name.pronunciation":[{"ns:base.schemastaging.pronunciation.yomigana":["ディーげんご"],"rdf:type":["ns:base.schemastaging.pronunciation"]}],"ns:common.topic.article":[{"ns:common.document.text":["The D programming language is an object-oriented, imperative, multi-paradigm system programming language created by Walter Bright of Digital Mars. It originated as a re-engineering of C++, but even though it is mainly influenced by that language, it is not a variant of C++. D has redesigned some C++ features and has been influenced by concepts used in other programming languages, such as Java, Python, Ruby, C#, and Eiffel.\\nD's design goals attempt to combine the performance of compiled languages with the safety and expressive power of modern dynamic languages. Idiomatic D code is commonly as fast as equivalent C++ code, while being shorter and memory-safe. Type inference, automatic memory management and syntactic sugar for common types allow faster development, while bounds checking, design by contract features and a concurrency-aware type system help reduce the occurrence of bugs.\\nD is designed with lessons learned from practical C++ usage rather than from a theoretical perspective. Even though it uses many C/C++ concepts it also discards some, and as such is not compatible with C/C++ source code. It adds to the functionality of C++ by also implementing design by contract, unit"],"ns:common.document.source_uri":["<http://wp/en/243881>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.language_designers":["Walter Bright"],"ns:common.topic.webpage":[{"ns:common.webpage.category":["ns:m.08mbj5d"],"ns:common.webpage.resource":["ns:m.0bm1k6h"],"ns:common.webpage.uri":["<http://www.d-programming-language.org>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.01kbt7"]}],"ns:computer.programming_language.introduced":["1999"],"ns:type.object.name":["D"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125d1w1sz"],"ns:computer.programming_language.influenced":["ns:m.09k75js"],"ns:computer.programming_language.language_paradigms":["ns:m.0qjrr"],"ns:computer.programming_language.influenced_by":["ns:m.0jgqg"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}