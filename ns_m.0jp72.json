{"ns:m.0jp72":{"rdfs:label":["J"],"ns:common.topic.description":["The J programming language, developed in the early 1990s by Kenneth E. Iverson and Roger Hui, is a synthesis of APL and the FP and FL function-level languages created by John Backus.\\nTo avoid repeating the APL special-character problem, J requires only the basic ASCII character set, resorting to the use of the dot and colon as \\\"inflections\\\" to form short words similar to digraphs. Most such \\\"primary\\\" J words serve as mathematical symbols, with the dot or colon extending the meaning of the basic characters available. Additionally, many characters which might need to be balanced in other languages are treated by J as stand-alone words or, when inflected, as single-character roots of multi-character words.\\nJ is a very terse array programming language, and is most suited to mathematical and statistical programming, especially when performing operations on matrices. It has also been used in Extreme Programming and network performance analysis.\\nLike the original FP/FL languages, J supports function-level programming via its tacit programming features."],"ns:common.topic.official_website":["<http://www.jsoftware.com/>"],"ns:computer.programming_language.language_designers":["Roger Hui"],"ns:common.topic.webpage":[{"ns:common.webpage.category":["ns:m.08mbj32"],"ns:common.webpage.resource":["ns:m.0bk5pbt"],"ns:common.webpage.uri":["<http://www.jsoftware.com/>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.0jp72"]}],"ns:common.topic.article":[{"ns:common.document.text":["The J programming language, developed in the early 1990s by Kenneth E. Iverson and Roger Hui, is a synthesis of APL (also by Iverson) and the FP and FL function-level languages created by John Backus.\\nTo avoid repeating the APL special character problem, J requires only the basic ASCII character set, resorting to the use of digraphs formed using the dot or colon characters to extend the meaning of the basic characters available. Additionally, to keep parsing and the language simple, and to compensate for the lack of character variation in ASCII, many characters which might need to be balanced in other languages (such as [] {} \\\"\\\" `` or <>) are treated by J as stand alone tokens or (with digraphs) as part of a multi-character token.\\nJ is a very terse array programming language, and is most suited to mathematical and statistical programming, especially when performing operations on matrices. It has also been used in Extreme Programming and network performance analysis.\\nLike the original FP/FL languages, J supports function-level programming (also known as higher-order functional programming), via its tacit programming features (note that function-level programming is not the same as"],"ns:common.document.source_uri":["<http://wp/en/73227>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.introduced":["1990"],"ns:type.object.name":["J"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125gphf65"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced":["ns:m.03m68b"],"ns:computer.programming_language.language_paradigms":["ns:m.05prj"],"ns:computer.programming_language.influenced_by":["ns:m.0q1d"],"ns:computer.programming_language.parent_language":["ns:m.0q1d"]}}