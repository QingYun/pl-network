{"ns:m.02f_gq":{"rdfs:label":["Hierarchical Music Specification Language"],"ns:common.topic.description":["The Hierarchical Music Specification Language is a music programming language written in the 1980s by Larry Polansky, Phil Burk, and David Rosenboom at Mills College. Written on top of Forth, it allowed for the creation of real-time interactive music performance systems, algorithmic composition software, and any other kind of program that requires a high degree of musical informatics. It was distributed by Frog Peak Music, and runs with a very light memory footprint on Macintosh and Amiga systems.\\nUnlike CSound and other languages for audio synthesis, HMSL is primarily a language for making music. As such, it interfaces with sound-making devices through built-in MIDI classes. However, it has a high degree of built-in understanding of music performance practice, tuning systems, and score reading. Its main interface for the manipulation of musical parameters is through the metaphor of shapes, which can be created, altered, and combined to create a musical texture, either by themselves or in response to real-time or scheduled events in a score.\\nHMSL has been widely used by composers working in algorithmic composition for over twenty years."],"key:en":["hierarchical_music_specification_language"],"ns:common.topic.article":[{"ns:common.document.text":["The Hierarchical Music Specification Language (HMSL) is a music programming language written in the 1980s by Larry Polansky, Phil Burk, and David Rosenboom at Mills College. Written on top of Forth, it allowed for the creation of real-time interactive music performance systems, algorithmic composition software, and any other kind of program that requires a high degree of musical informatics. It was distributed by Frog Peak Music, and runs with a very light memory footprint (~1 megabyte) on Macintosh and Amiga systems.\\nUnlike CSound and other languages for audio synthesis, HMSL is primarily a language for making music. As such, it interfaces with sound-making devices through built-in MIDI classes. However, it has a high degree of built-in understanding of music performance practice, tuning systems, and score reading. Its main interface for the manipulate of musical parameters is through the metaphor of shapes, which can be created, altered, and combined to create a musical texture, either by themselves or in response to real-time or scheduled events in a score.\\nHMSL has been widely used by composers working in algorithmic composition for over twenty years. In addition to the authors"],"ns:common.document.source_uri":["<http://wp/en/483750>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Hierarchical Music Specification Language"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125bk0lvr"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}