{"ns:m.02sqw0":{"ns:common.topic.description":["MDL is a descendant of the Lisp programming language. Its initial purpose was to provide high level language support for the Dynamic Modeling Group at MIT's Project MAC. It was initially developed in 1971 on the PDP-10 computer under the Incompatible Timesharing System. The initial development team consisted of Gerald Sussman and Carl Hewitt of the Artificial Intelligence Lab, and Chris Reeve, Bruce Daniels, and David Cressey of the Dynamic Modeling Group. Later, Stu Galley, also of the Dynamic Modeling Group, wrote the MDL documentation.\\nMDL was initially known as “Muddle”. This style of self-deprecating humor was not widely understood or appreciated outside of Project MAC and a few other early citadels of information technology. So the name was sanitized to MDL.\\nMDL provides several enhancements to classical Lisp. It supports several built-in data types, including lists, strings and arrays, and user-defined data types. It offers multithreaded expression evaluation and coroutines. Variables can carry both a local value within a scope, and a global value, for passing data between scopes."],"rdfs:label":["MDL"],"key:en":["mdl_programming_language"],"ns:common.topic.article":[{"ns:common.document.text":["MDL (the MIT Design Language) is a descendant of the Lisp Programming language. (It is different from the MicroStation Development Language.) Its initial purpose was to provide high level language support for the Dynamic Modeling Group at MIT's Project MAC. It was initially developed in 1971 on the PDP-10 computer under the Incompatible Timesharing System. The initial development team consisted of Gerald Sussman and Carl Hewitt of the Artificial Intelligence Lab, and Chris Reeve, Bruce Daniels, and David Cressey of the Dynamic Modeling Group. Later, Stu Galley, also of the Dynamic Modeling Group, wrote the MDL documentation.\\nMDL was initially known as “Muddle”. This style of self-deprecating humor was not widely understood or appreciated outside of Project MAC and a few other early citadels of information technology. So the name was sanitized to MDL.\\nMDL provides several enhancements to classical Lisp. It supports several built-in data types, including lists, strings and arrays, and also user-defined data types. It offers multithreaded expression evaluation and coroutines. Variables can carry both a local value within a scope, and a global value, for passing data between scopes."],"ns:common.document.source_uri":["<http://wp/en/586499>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.language_designers":["Gerald Jay Sussman"],"ns:type.object.name":["MDL"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125cng11c"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.04kyw"],"ns:computer.programming_language.parent_language":["ns:m.04kyw"],"ns:computer.programming_language.influenced":["ns:m.06zrb"]}}