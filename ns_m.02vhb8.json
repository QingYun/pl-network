{"ns:m.02vhb8":{"ns:common.topic.description":["Obliq is an interpreted, object-oriented programming language designed to make distributed, and locally multi-threaded, computation simple and easy for the programmer, while providing program safety and implicit type system. The interpreter is written in Modula-3, and provides Obliq with full access to Modula-3's network objects capabilities. A type inference algorithm for record concatenation, subtyping and recursive types has been developed for Obliq, more important it has been proved to be NP-complete and its lowest complexity to be Ο or if under other modeling up to certain conditions down to Ο and its best known implementation runs in Ο. Obliq's syntax is very similar to Modula-3, the biggest difference being that Obliq has no need of explicit typed variables although explicit type declarations are allowed and ignored by the interpreter. The basic data types in the language include booleans, integers, reals, characters, strings, and arrays. Obliq supports the usual set of sequential control structures, as well as special control forms for concurrency."],"rdfs:label":["Obliq"],"key:en":["obliq_programming_language"],"ns:common.topic.article":[{"ns:common.document.text":["Obliq is an interpreted, object-oriented programming language designed to make distributed, and locally multi-threaded, computation simple and easy for the programmer, while providing program safety and implicit type system. The interpreter is written in Modula-3, and provides Obliq with full access to Modula-3's network objects capabilities. A type inference algorithm for record concatenation, subtyping and recursive types has been developed for Obliq, more important it has been proved to be NP-complete  and its lowest complexity to be Ο(n) or if under other modeling up to certain conditions down to Ο(n)  and its best known implementation runs in Ο(n ). Obliq's syntax is very similar to Modula-3, the biggest difference being that Obliq has no need of explicit typed variables (i.e., a variable can hold any data type allowed by the type checker and if does not accepts one, i.e., a given expression execution error will be thrown) although explicit type declarations are allowed and ignored by the interpreter. The basic data types in the language include booleans, integers, reals, characters, strings, and arrays. Obliq supports the usual set of sequential control structures"],"ns:common.document.source_uri":["<http://wp/en/602578>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Obliq"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1257vnz1m"],"ns:computer.programming_language.language_paradigms":["ns:m.0gkc5"],"ns:computer.programming_language.influenced_by":["ns:m.0gd42"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}