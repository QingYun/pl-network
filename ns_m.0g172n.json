{"ns:m.0g172n":{"ns:common.topic.description":["Hume is a functionally based programming language developed at the University of St Andrews and Heriot-Watt University in Scotland since the year 2000. The language name is both an acronym meaning 'Higher-order Unified Meta-Environment' and an honorific to the 18th Century philosopher David Hume. It targets real-time embedded systems, aiming to produce a design that is both highly abstract, yet which will still allow precise extraction of time and space execution costs. This allows programmers to guarantee the bounded time and space demands of executing programs.\\nHume is unusual in combining functional programming ideas with ideas from finite state automata. Automata are used to structure communicating programs into a series of \\\"boxes\\\", where each box maps inputs to outputs in a purely functional way using high-level pattern-matching. It is also unusual in being structured as a series of levels, each of which exposes different machine properties."],"rdfs:label":["Hume"],"ns:common.topic.image":[{"ns:type.content.length":["1126897"],"ns:type.content.blob_id":["e008de870605e5cd091feb26b3dabde2a7f9657d5bf76026fdc6d34bd4dc9a0a"],"rdfs:label":["Hume Statue in Edinburgh"],"ns:common.licensed_object.provenance":["wikipedia,en,6328406"],"ns:common.image.size":["ns:m.029m1kl"],"ns:type.content.source":["ns:m.03t70jv"],"ns:common.licensed_object.license":["ns:m.034jd"],"ns:type.content.media_type":["ns:m.08wq"],"ns:type.object.name":["Hume Statue in Edinburgh"],"rdf:type":["ns:type.content"],"ns:common.image.appears_in_topic_gallery":["ns:m.0g172n"]}],"ns:common.topic.article":[{"ns:common.document.text":["Hume is a functionally-based programming language developed at the University of St Andrews and Heriot-Watt University in Scotland, and named after the 18th Century philosopher David Hume. It targets real-time embedded systems, aiming to produce a design that is both highly abstract, yet which will still allow precise extraction of time and space execution costs, so allowing programs to be written that will execute under guaranteed bounded time and space constraints.\\nHume is unusual in combining functional programming ideas with ideas from finite state automata. Automata are used to structure communicating programs into a series of \\\"boxes\\\", where each box maps inputs to outputs in a purely functional way using high-level pattern-matching. It is also unusual in being structured as a series of levels, each of which exposes different machine properties, which is highly unusual.\\nThe Hume language design attempts to maintain the essential properties and features required by the embedded systems domain (especially for transparent time and space costing) whilst incorporating as high a level of program abstraction as possible. It aims to target applications ranging from simple"],"ns:common.document.source_uri":["<http://wp/en/6328175>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Hume"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125d4sbqk"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.language_paradigms":["ns:m.02ykw"]}}