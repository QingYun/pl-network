{"ns:m.02rm0t8":{"rdfs:label":["Micro programming language"],"ns:common.topic.description":["The Micro programming language is a very basic programming language used in teaching computer science students principles of compiler construction.\\nThe language itself is built on top of an even more basic language called Tiny, which is also used in compiler construction courses. Among the features present in Micro, but not in Tiny, are IF statements, WHILE statements, variable declarations, floating point numbers, and the multiplication and division operators.\\nFor those familiar with Pascal, certain similarities can be seen in Micro source code and also in how the language is handled by a compiler. These similarities include the fact that Pascal, Micro, and Tiny all use the same assignment operator, with the operator being the string \\\":=\\\". Variable declarations in Micro are identical in structure to Pascal declarations, with the notable exception that Micro only supports two data types, namely INTEGER and REAL.\\nMicro also follows a number of compilation rules that are utilised by Pascal. These include case-insensitivity and type-compatibility."],"key:en":["micro_programming_language"],"ns:common.topic.article":[{"ns:common.document.text":["The Micro programming language is a very basic programming language used in teaching computer science students principles of compiler construction.\\nThe language itself is built on top of an even more basic language called Tiny, which is also used in compiler construction courses. Among the features present in Micro, but not in Tiny, are IF statements, WHILE statements, variable declarations, floating point numbers, and the multiplication and division operators.\\nFor those familiar with Pascal, certain similarities can be seen in Micro source code and also in how the language is handled by a compiler. These similarities include the fact that Pascal, Micro, and Tiny all use the same assignment operator, with the operator being the string \\\":=\\\". Variable declarations in Micro are identical in structure to Pascal declarations, with the notable exception that Micro only supports two data types, namely INTEGER and REAL (the latter for floating point numbers).\\nMicro also follows a number of compilation rules that are utilised by Pascal. These include case-insensitivity (\\\"Temp\\\", \\\"TEMP\\\", and \\\"temp\\\" are all considered the same) and type-compatibility. The type-compatibility rules can be summed"],"ns:common.document.source_uri":["<http://wp/en/11630202>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Micro programming language"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1257zsspx"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}