{"ns:m.032qpc":{"ns:common.topic.description":["Cola is a programming language similar to Java and C# with some higher level features of Perl and Ruby including first-class regular expressions. It can be compiled for the Microsoft .NET CLR or the Parrot virtual machine.\\nCola is a compiled language with static type checking, but the designer mixed in some of the features more common to scripting languages like Perl and Ruby. Cola is less of a new language \\\"design\\\" than a mix of several very powerful languages with the following key principles in mind:\\nC++, Java and C# programmers should be immediately comfortable.\\nConvention over Code - Things that are conventional are implicit defaults. The default scope accesses can be configured with compiler flags to remove burden from the language.\\nLow signal-to-noise ratio - Reduced keyword clutter and an emphasis on improved readability and less on controlling access of other programmers. In practice, the use of the word public dominates Java and C# syntax, based on source code analysis. Cola omits the public keyword, and supports C++ style of scope access sections, and provides a single character @ to make a member private."],"rdfs:label":["Cola"],"key:en":["cola_programming_language"],"ns:common.topic.article":[{"ns:common.document.text":["Cola is a programming language similar to Java and C# with some higher level features of Perl and Ruby including first-class regular expressions. It can be compiled for the Microsoft .NET CLR or the Parrot virtual machine.\\nCola is a compiled language with static type checking, but the designer mixed in some of the features more common to scripting languages like Perl and Ruby. According to the author, after years of using Java and C++ for large projects, and Perl for small to medium ones, there seemed to be no language to fill the gap. Cola is less of a new language \\\"design\\\" than a mix of several very powerful languages with the following key principles in mind:\\nCurly braces and semi-colons at the heart - C++, Java and Perl programmers should be comfortable, whitespace has no effect on the semantics.\\nConvention over Code - Things that are conventional don't need to be explicit (Java/C# public keyword on methods)\\nHigh signal-to-noise ratio - Use Convention over Code to reduce keyword clutter and improve readability. Don't clutter the expression of an idea with implementation of the idea. Java and C# exhibit this in their arguably poor choice of default scope access of fields and"],"ns:common.document.source_uri":["<http://wp/en/683908>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Cola"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1258w5m4q"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}