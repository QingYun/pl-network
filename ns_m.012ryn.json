{"ns:m.012ryn":{"ns:common.topic.description":["Unlambda is a minimal, \\\"nearly pure\\\" functional programming language invented by David Madore. It is based on combinatory logic, a version of the lambda calculus that omits the lambda operator. It relies mainly on two built-in functions and an \\\"apply\\\" operator. These alone make it Turing-complete, but there are also some I/O functions to make it possible to interact with the user, some shortcut functions and a function for lazy evaluation. There are no variables in the language."],"rdfs:label":["Unlambda"],"key:en":["unlambda"],"ns:common.topic.article":[{"ns:common.document.text":["Unlambda is a minimal, \\\"nearly pure\\\" functional programming language invented by David Madore. It is based on combinatory logic, a version of the lambda calculus that omits the lambda operator. It relies mainly on two built-in functions (s and k) and an \\\"apply\\\" operator (written `, the backquote character). These alone make it Turing-complete, but there are also some I/O functions to make it possible to interact with the user, some shortcut functions and a function for lazy evaluation. There are no variables in the language.\\nAs an esoteric programming language, Unlambda is meant as a demonstration of very pure functional programming rather than for practical use. Its main feature is the lack of conventional operators and data types—the only kind of data in the program are one-parameter functions. Data can nevertheless be simulated with appropriate functions as in the lambda calculus. Multi-parameter functions can be represented with the technique of currying.\\nUnlambda is based around the principle of abstraction elimination, or the elimination of all saved variables, including functions. As a purely-functional language, not only are Unlambda's functions first-class objects, they"],"ns:common.document.source_uri":["<http://wp/en/146927>"],"rdf:type":["ns:common.document"]}],"ns:base.schemastaging.context_name.pronunciation":[{"ns:base.schemastaging.pronunciation.yomigana":["アンラムダ"],"rdf:type":["ns:base.schemastaging.pronunciation"]}],"ns:computer.programming_language.language_designers":["David Madore"],"ns:type.object.name":["Unlambda"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1254z0pjj"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.language_paradigms":["ns:m.02ykw"],"ns:computer.programming_language.influenced_by":["ns:m.04mg4"]}}