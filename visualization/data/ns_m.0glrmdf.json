{"ns:m.0glrmdf":{"key:authority.google.google_plus_page":["102481741611133754149"],"ns:common.topic.alias":["Ceylon Project"],"ns:common.topic.description":["Ceylon is an object-oriented, strongly statically typed programming language with an emphasis on immutability, created by Red Hat. It is based on the Java programming language. Ceylon programs run on the Java Virtual Machine, and can be compiled to JavaScript.\\nCeylon aims at solving the following problems its developers experienced with Java:\\nimproved structured data and user interfaces\\nlanguage level modularity\\nsupport for first-class and higher-order functions\\ndo away with clumsy metaprogramming\\nThe name \\\"Ceylon\\\" is an oblique reference to Java, in that Java and Sri Lanka, formerly known as Ceylon, are islands known for growth and export of tea and coffee."],"rdfs:label":["Ceylon"],"ns:common.topic.social_media_presence":["<http://plus.google.com/102481741611133754149>"],"ns:common.topic.article":[{"ns:common.document.text":["The Ceylon Project is an upcoming programming language and SDK, created by Red Hat. It is based on the Java programming language and when it is released, will run under the Java Virtual Machine.\\nThe project is described to be what a language and SDK for business computing would look like if it were designed today, keeping in mind the successes and failures of the Java language and Java SE SDK. The project has been referred to by industry analysts as a \\\"Java killer\\\", though Red Hat themselves reject this term.\\nCeylon inherits most of Java's syntax. The following is the Ceylon version of the Hello world program:\\nCeylon will not provide operator overloading, as it was deemed to be generally confusing, but instead supports operator polymorphism, where an operator is a shortcut for a method of a built-in type. This is supposed to be safer and simpler than true operator overloading.\\nInterfaces are data structures that contain member definitions and not actual implementation. They are useful to define a contract between members in different types that have different implementations. Every interface is implicitly abstract.\\nAn interface is implemented by a class using the satisfies keyword."],"ns:common.document.source_uri":["<http://wp/en/31483631>"],"rdf:type":["ns:common.document"]}],"ns:common.topic.webpage":[{"ns:common.webpage.uri":["<http://ceylon-lang.org/>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.0glrmdf"]}],"ns:type.object.name":["Ceylon"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1yl5r5mmm"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.language_paradigms":["ns:m.05prj"],"ns:computer.programming_language.influenced_by":["ns:m.091hdj"],"ns:computer.programming_language.influenced":["ns:m.0w_19hd"]}}