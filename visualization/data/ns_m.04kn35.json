{"ns:m.04kn35":{"ns:common.topic.description":["SKI combinator calculus is a computational system that may be perceived as a reduced version of untyped lambda calculus. It can be thought of as a computer programming language, though it is not useful for writing software. Instead, it is important in the mathematical theory of algorithms because it is an extremely simple Turing complete language.\\nAll operations in lambda calculus are expressed in SKI as binary trees whose leaves are one of the three symbols S, K, and I. In fact, the symbol I is added only for convenience, and just the other two suffice for all of the purposes of the SKI system.\\nAlthough the most formal representation of the objects in this system requires binary trees, they are usually represented, for typesetability, as parenthesized expressions, either with all the subtrees parenthesized, or only the right-side children subtrees parenthesized. So, the tree whose left subtree is the tree KS and whose right subtree is the tree SK is usually typed as, or more simply as KS, instead of being fully drawn as a tree."],"rdfs:label":["SKI combinator calculus"],"key:en":["ski_combinator_calculus"],"ns:common.topic.article":[{"ns:common.document.text":["SKI combinator calculus is a computational system that may be perceived as a reduced version of untyped lambda calculus. It can be thought of as a computer programming language, though it is not useful for writing software. Instead, it is important in the mathematical theory of algorithms because it is an extremely simple Turing complete language.\\nAll operations in lambda calculus are expressed in SKI as binary trees whose leaves are one of the three symbols S, K, and I (called combinators). In fact, the symbol I is added only for convenience, and just the other two suffice for all of the purposes of the SKI system.\\nAlthough the most formal representation of the objects in this system requires binary trees, they are usually represented, for typesetability, as parenthesized expressions, either with all the subtrees parenthesized, or only the right-side children subtrees parenthesized. So, the tree whose left subtree is the tree KS and whose right subtree is the tree SK is usually typed as ((KS)(SK)), or more simply as KS(SK), instead of being fully drawn as a tree (as formality and readability would require).\\nInformally, and using programming language jargon, a tree (xy) can be"],"ns:common.document.source_uri":["<http://wp/en/1232841>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["SKI combinator calculus"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1255d2pvs"],"ns:computer.programming_language.influenced":["ns:m.012ryn"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}