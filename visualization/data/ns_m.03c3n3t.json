{"ns:m.03c3n3t":{"ns:common.topic.description":["Snostorm is a version of the SNOBOL4 language with structured programming constructs added. It compensates for the near absence of structured programming constructs in SNOBOL4 by providing IF, ELSEIF, ELSE, LOOP, CASE, and PROCEDURE statements, among others. It was originally designed and implemented by Fred G. Swartz as a preprocessor for SPITBOL running under the Michigan Terminal System at the University of Michigan Computing Center during the 1970s."],"rdfs:label":["Snostorm"],"key:en":["snostorm"],"ns:common.topic.article":[{"ns:common.document.text":["SnoStorm is a structured version of the SNOBOL language, and in particular SNOBOL4. The language was also known as SnoStorm3, and compensated for the near absence of structuring programming constructs in SNOBOL by providing IF, WHILE, REPEAT statements and others.\\nThe syntax of SnoStorm3 is largely insensitive to spaces and newlines, but not entirely so because of its dependence upon SNOBOL4 for execution.\\nThe grammar includes:\\nA SnoStorm3 compiler existed at University College London (UCL) from 1982 to 1984 and worked by compiling SnoStorm3 into SNOBOL4, which could then be executed using the SNOBOL4 interpreter or by using a Spitbol compiler to create an executable."],"ns:common.document.source_uri":["<http://wp/en/13387064>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Snostorm"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1256kn342"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}