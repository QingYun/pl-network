{"ns:m.037s0n":{"ns:common.topic.description":["Pantalk is an interpreted cross-platform programming language developed in the early 1980s by Cojyp for use on Canal Plus' MediaHighway interactive tv platform and other embedded environments.\\nPantalk was created to take much less development time compared to Java by avoiding the \\\"Kid in a candyshop\\\" effect that plenty of rich language and structures may have, but in practice the serious limitations prevent it being taken as a serious computer language outside of the limited Mediahighway digital TV platform which has been outpaced by the more ubiquitous javascript based liberate and C based OpenTV platforms.\\nPantalk is a partially tokenised interpreted language in which structured code written as plain text and then precompiled into *.isc files. These *.isc files can be compiled into bytecode. It features a subset of the simpler control structures, operators, variable types and statements that you expect from any compiled or interpreted language, and it also has features of its own. For example the variables declaration, the memory allocation, the management of the graphics and widgets."],"rdfs:label":["Pantalk"],"key:en":["pantalk"],"ns:common.topic.article":[{"ns:common.document.text":["Pantalk is an interpreted cross-platform programming language developed in the early 1980s by Cojyp (HyperPanel Lab) for use on Canal Plus' MediaHighway interactive tv platform and other embedded environments.\\nPantalk was created to take much less development time compared to Java by avoiding the \\\"Kid in a candyshop\\\" effect that plenty of rich language and structures may have, but in practice the serious limitations prevent it being taken as a serious computer language outside of the limited Mediahighway digital TV platform which has been outpaced by the more ubiquitous javascript based liberate and C based OpenTV platforms.\\nPantalk is a partially tokenised interpreted language in which structured code written as plain text (*.isb files) and then precompiled into *.isc files. These *.isc files can be compiled into bytecode (p-code, or *.isu files). It features a subset of the simpler control structures, operators, variable types and statements that you expect from any compiled or interpreted language, and it also has features of its own. For example the variables declaration (all global across whole applications), the memory allocation, the management of the graphics and widgets."],"ns:common.document.source_uri":["<http://wp/en/745031>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Pantalk"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1255tbtvt"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}