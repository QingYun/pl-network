{"ns:m.01qplz":{"ns:common.topic.description":["SPARK is a formally defined computer programming language based on the Ada programming language, intended for the development of high integrity software used in systems where predictable and highly reliable operation is essential. It facilitates the development of applications that demand safety, security, or business integrity.\\nOriginally, there were three versions of the SPARK language based on Ada 83, Ada 95 and Ada 2005 respectively.\\nA fourth version of the SPARK language, SPARK 2014, based on Ada 2012, was released on April 30, 2014. SPARK 2014 is a complete re-design of the language and supporting verification tools.\\nThe SPARK language consists of a well-defined subset of the Ada language that uses contracts to describe the specification of components in a form that is suitable for both static and dynamic verification.\\nIn SPARK83/95/2005, the contracts are encoded in Ada comments, but are processed by the SPARK \\\"Examiner\\\" and its associated tools.\\nSPARK 2014, in contrast, uses Ada 2012's built-in \\\"aspect\\\" syntax to express contracts, bringing them into the core of the language [2]."],"rdfs:label":["SPARK"],"key:en":["spark_programming_language"],"ns:common.topic.official_website":["<http://www.adacore.com/home/products/sparkpro/>"],"ns:common.topic.topical_webpage":["<http://www.sparkada.com/>"],"ns:common.topic.article":[{"ns:common.document.text":["SPARK is a formally-defined computer programming language based on the Ada programming language, intended to be secure and to support the development of high integrity software used in applications and systems where predictable and highly reliable operation is essential either for reasons of safety (e.g., avionics in aircraft/spacecraft, or medical systems and process control software in nuclear powerplants) or for business integrity (for example financial software for banking and insurance companies).\\nThere are two versions of the SPARK language; one based on Ada 83, and the other on Ada 95. The SPARK language consists of a highly restricted, well-defined subset of the Ada language that uses annotated meta information (in the form of Ada comments) that describe desired component behavior and individual runtime requirements, thereby optionally facilitating mandatory use of Design by Contract principles to accurately formalize and validate expected runtime behavior.\\nBecause the annotations are in commentary, SPARK programs are generally also valid Ada programs and can be compiled by an appropriate Ada compiler. The most recent revision of the implementation, RavenSPARK, includes the"],"ns:common.document.source_uri":["<http://wp/en/291874>"],"rdf:type":["ns:common.document"]}],"ns:common.topic.webpage":[{"ns:common.webpage.category":["ns:m.08mbj5d"],"ns:common.webpage.resource":["ns:m.0bjqnz_"],"ns:common.webpage.uri":["<http://www.adacore.com/home/products/sparkpro/>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.01qplz"]}],"ns:type.object.name":["SPARK"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125gwqrkb"],"ns:computer.programming_language.language_paradigms":["ns:m.01h1_2"],"ns:computer.programming_language.influenced_by":["ns:m.0n6y"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.parent_language":["ns:m.0n6y"]}}