{"ns:m.01szng":{"ns:common.topic.description":["PL/C is a computer programming language developed at Cornell University with the specific goal of being used for teaching programming. It is based on IBM's PL/I language, and was designed in the early 1970s. Cornell also developed a compiler for the language that was based on its earlier CUPL compiler, and it was widely used in college-level programming courses. The two researchers and academic teachers who designed PL/C were Richard W. Conway and Thomas R. Wilcox. They submitted the famous article \\\"Design and implementation of a diagnostic compiler for PL/I\\\" published in the Communications of ACM in March 1973, pages 169-179. PL/C eliminated some of the more complex features of PL/I, and added extensive debugging and error recovery facilities. PL/C is a subset of PL/I. A program that runs without error under the PL/C compiler should run under PL/I and produce the same results, unless certain incompatible diagnostic features, such as a macro section, were used."],"rdfs:label":["PL/C"],"key:en":["pl_c"],"ns:common.topic.article":[{"ns:common.document.text":["PL/C is a computer programming language developed at Cornell University with the specific goal of being used for teaching programming. It is based on IBM's PL/I language, and was designed in the early 1970s. Cornell also developed a compiler for the language that was based on its earlier CUPL compiler, and it was widely used in college-level programming courses. The two researchers and academic teachers who designed PL/C were Richard W. Conway and Thomas R. Wilcox. They submitted the famous article \\\"Design and implementation of a diagnostic compiler for PL/I\\\" published in the Communications of ACM in March 1973, pages 169-179. PL/C eliminated some of the more complex features of PL/I, and added extensive debugging and error recovery facilities. PL/C is a subset of PL/I. A program that runs without error under the PL/C compiler should run under PL/I and produce the same results, unless certain incompatible diagnostic features, such as a macro section (begun by a $MACRO statement and finished by a $MEND statement), were used. The PL/C compiler had the unusual capability of never failing to compile any program, through the use of extensive automatic correction of many syntax errors"],"ns:common.document.source_uri":["<http://wp/en/309357>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["PL/C"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125cckwz1"],"ns:computer.programming_language.language_paradigms":["ns:m.06w_b"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.05xjv"],"ns:computer.programming_language.parent_language":["ns:m.05xjv"]}}