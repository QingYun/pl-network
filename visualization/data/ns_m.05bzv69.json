{"ns:m.05bzv69":{"rdfs:label":["Ambi"],"key:en":["ambi"],"ns:common.topic.article":[{"ns:common.document.text":["Ambi is a structured, imperative, stack-based, computer programming language designed and implemented by David R. Pratten.\\nAmbi is a programming language generalised from Reverse Polish Notation arithmetic. Other languages such as Forth and RPL have similar roots and illustrious histories, but have embraced non-RPN elements as they developed. In contrast, Ambi attempts to stick strictly to the RPN approach. Ambi also has similarities to the JOY and CAT.\\nRPN and PN allows arbitrary arithmetic expressions to be composed without brackets \\\"(\\\"and\\\")\\\". Ambi is an exploration of the possibility of defining a structured programming language that does not use grouping symbols such as:\\nAs it turns out this is possible and one way of doing this is explored in Ambi.\\nAn interesting outcome of this work is that programs become ambidextrous and ambivalent about the ordering of the program. Every program a has an equivalent form a' which is written down as the reverse of a!\\nAn implementation of the Fibonacci function. In Python can be defined recursively as:\\nIn Ambi, it would be:\\nor equivalently\\nA similar implementation of the Fibonacci function in Cat follows:\\nNotice how that even through the"],"ns:common.document.source_uri":["<http://wp/en/21262259>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.introduced":["2009"],"ns:type.object.name":["Ambi"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.12552s7xc"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.02z81"],"ns:computer.programming_language.language_paradigms":["ns:m.05yd5"]}}