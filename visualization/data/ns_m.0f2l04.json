{"ns:m.0f2l04":{"ns:common.topic.description":["Napier88 is an orthogonally persistent programming language that was designed and implemented at the University of St Andrews, Scotland. The primary designer was Ron Morrison, whose initial designs were extended and implemented by Fred Brown, Richard Connor, and Al Dearle. Napier88 was ahead of its time in many ways, and was the first robustly implemented language to combine a polymorphic type system with orthogonal persistence. The language was robustly implemented and released to users from both industry and academia; up to 1,000 registered users were recorded in due course. The language, however, was only intended to provide a proof of concept for an experiment in persistent programming; some time after 1989 the group's interests moved on and the language was no longer maintained.\\nIts influence lives on in various other systems however; the CORBA type ANY is distinctly recognisable in Napier88's type ANY; Microsoft's CLR uses a similar polymorphic architecture, and Java's parametric types solve some of the same problems of uninstantiated types escaping from their static scope."],"rdfs:label":["Napier88"],"key:en":["napier88"],"ns:common.topic.article":[{"ns:common.document.text":["Napier88 is an orthogonally persistent programming language.\\nNapier88 was designed and implemented at the University of St Andrews, Scotland. The primary designer was Ron Morrison, whose initial designs were extended and implemented by Fred Brown, Richard Connor, and Al Dearle. Napier88 was ahead of its time in many ways, and was the first robustly implemented language to combine a polymorphic type system with orthogonal persistence. The language was robustly implemented and released to users from both industry and academia; up to around 1,000 registered users were recorded in due course. The language however was only ever intended to provide a proof of concept for an experiment in persistent programming however; some time after 1989 (the year the first implementation was in fact released!) the group's interests moved on and the language was no longer maintained.\\nIts spirit lives on in various other systems however; the CORBA type ANY is distinctly recognisable in Napier88's type any; Microsoft's CLR uses a similar polymorphic architecture, and Java's parametric types solve some of the same problems of uninstantiated types escaping from their static scope.\\nNapier88 was the third of"],"ns:common.document.source_uri":["<http://wp/en/5748470>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Napier88"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1259143hf"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced":["ns:m.0dsbpg6"]}}