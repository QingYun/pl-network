{"ns:m.03n9v6":{"ns:common.topic.description":["Unicon is a programming language designed by American computer scientist Clint Jeffery with collaborators including Shamim Mohamed, Jafar Al Gharaibeh, Robert Parlett and others. Unicon descended from Icon and a preprocessor for Icon called IDOL. Compared with Icon, Unicon offers better access to the operating system as well as support for object-oriented programming. Unicon began life as a merger of three popular Icon extensions: an OO preprocessor named Idol, a POSIX filesystem and networking interface, and an ODBC facility. The name is shorthand for \\\"Unified Extended Dialect of Icon.\\\"\\nCompared with Icon, many of the new features of Unicon are extensions to the I/O and system interface, to complement Icon's core control and data structures. Rather than providing lower-level APIs as-is from C, Unicon implements higher level and easier to use facilities, enabling rapid development of graphic- and network-intensive applications in addition to Icon's core strengths in text and file processing.\\nclasses and packages\\nexceptions as a contributed class library - see mailing list\\nloadable child programs\\nmonitoring of child programs\\ndynamic loading of C modules"],"rdfs:label":["Unicon"],"key:en":["unicon_programming_language"],"ns:common.topic.official_website":["<http://www.unicon.sourceforge.net/>"],"ns:computer.programming_language.language_designers":["Clint Jeffery"],"ns:common.topic.article":[{"ns:common.document.text":["Unicon is a programming language designed by American computer scientist Clint Jeffery. Unicon descended from Icon and its preprocessor, IDOL, that offers better access to the operating system as well as support for object-oriented programming. Unicon began life as a merger of three popular Icon extensions: an OO preprocessor named Idol, a POSIX filesystem and networking interface, and an ODBC facility. The name is shorthand for \\\"Unified Extended Dialect of Icon.\\\"\\nCompared with Icon, many of the new features of Unicon are extensions to the I/O and system interface, to complement Icon's core control and data structures. Rather than providing lower-level APIs as-is from C, Unicon implements higher level and easier to use facilities, enabling rapid development of graphic- and network-intensive applications in addition to Icon's core strengths in text and file processing.\\nWhen run as a graphical IDE, the Unicon program ui.exe continues to offer links to Icon help.\\nThe official Unicon programming book in PDF format is a popular way to learn Unicon. The book includes an introduction to object-oriented development as well as UML. It includes useful chapters on topics such as the use of"],"ns:common.document.source_uri":["<http://wp/en/902180>"],"rdf:type":["ns:common.document"]}],"ns:common.topic.webpage":[{"ns:common.webpage.uri":["<http://unicon.sourceforge.net/>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.03n9v6"]}],"ns:type.object.name":["Unicon"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125fkm5d2"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.03tr0"],"ns:computer.programming_language.parent_language":["ns:m.03tr0"],"ns:computer.programming_language.language_paradigms":["ns:m.05yd5"]}}