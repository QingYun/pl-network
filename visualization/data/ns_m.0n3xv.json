{"ns:m.0n3xv":{"ns:common.topic.description":["Miranda is a lazy, purely functional programming language designed by David Turner as a successor to his earlier programming languages SASL and KRC, using some concepts from ML and Hope. It was produced by Research Software Ltd. of England and was the first purely functional language to be commercially supported.\\nMiranda was first released in 1985, as a fast interpreter in C for Unix-flavour operating systems, with subsequent releases in 1987 and 1989. The later Haskell programming language is similar in many ways to Miranda."],"rdfs:label":["Miranda"],"key:en":["miranda_programming_language"],"ns:common.topic.official_website":["<http://miranda.org.uk/>"],"ns:common.topic.webpage":[{"ns:common.webpage.uri":["<http://miranda.org.uk>"],"ns:common.webpage.category":["ns:m.08mbj5d"],"ns:common.webpage.resource":["ns:m.0blw963"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.0n3xv"]}],"ns:computer.programming_language.language_designers":["David Turner"],"ns:common.topic.article":[{"ns:common.document.text":["Miranda is a non-strict purely functional programming language designed by David Turner as a successor to his earlier programming languages SASL and KRC, using some concepts from ML and Hope. It was produced by Research Software Ltd. of England (which holds a trademark on the name Miranda) and was the first purely functional language to be commercially supported.\\nMiranda was first released in 1985, as a fast interpreter in C for Unix-flavour operating systems, with subsequent releases in 1987 and 1989. The later Haskell programming language is similar in many ways to Miranda.\\nMiranda is a lazy, purely functional programming language. That is, it lacks side effects and imperative programming features. A Miranda program (called a script) is a set of equations that define various mathematical functions and algebraic data types. The word set is important here: the order of the equations is, in general, irrelevant, and there is no need to define an entity prior to its use.\\nSince the parsing algorithm makes intelligent use of layout (indentation), there is rarely a need for bracketing statements and no statement terminators are required. This feature, inspired by ISWIM is also used in"],"ns:common.document.source_uri":["<http://wp/en/93267>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.introduced":["1985"],"ns:type.object.name":["Miranda"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1255699q6"],"ns:computer.programming_language.influenced":["ns:m.03j_q"],"ns:computer.programming_language.language_paradigms":["ns:m.04m47"],"ns:computer.programming_language.influenced_by":["ns:m.055mc"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}