{"ns:m.0gyz66":{"rdfs:label":["Iota and Jot"],"ns:common.topic.description":["Iota and its successor Jot are extremely minimalist formal systems, designed to be even simpler than other more popular alternatives, such as the lambda calculus and SKI combinator calculus. They can therefore also be considered minimalist computer programming languages, or Turing tarpits, esoteric programming languages that are designed to be as small as possible but still Turing-complete. Both systems use only two symbols and involve only two operations. Zot is a continuized version of Iota that includes input and output.\\nIota's universal combinator has a very simple structure:\\nFrom this, one can recover the usual SKI basis combinators as follows:\\nBecause of its minimalism, it has influenced research concerning Chaitin's constant."],"key:en":["iota_and_jot"],"ns:common.topic.article":[{"ns:common.document.text":["Iota and its successor Jot (from Greek iota, Hebrew yodh, the smallest letters in those two alphabets) are Turing tarpits, esoteric programming languages that are designed to be as small as possible but still Turing-complete. Each uses two symbols and involves two operations, with simple denotational semantics defined in terms of lambda calculus. Zot is a continuized version of Iota that includes input and output.\\nIota's universal combinator is the lambda term . Then one can recover the usual SKI basis combinators as follows: .\\nBecause of its minimalism, it has influenced research concerning Chaitin's constant."],"ns:common.document.source_uri":["<http://wp/en/6962225>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Iota and Jot"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125fnd3z7"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}