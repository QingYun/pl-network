{"ns:m.02wz_qj":{"ns:common.topic.description":["Vala is an object-oriented programming language with a self-hosting compiler that generates C code and uses the GObject system. Vala is syntactically similar to C# and includes several features such as: anonymous functions, signals, properties, generics, assisted memory management, exception handling, type inference, and foreach statements. Its developers JÃ¼rg Billeter and Raffaele Sandrini aim to bring these features to the plain C runtime with little overhead and no special runtime support by targeting the GObject object system. Rather than being compiled directly to assembly or to another intermediate language, Vala is source-to-source compiled to C, which is then compiled with a platform's standard C compiler, such as GCC.\\nFor memory management, the GObject system provides reference counting. In C, a programmer must manually manage adding and removing references, but in Vala, managing such reference counts is automated if a programmer uses the language's built-in reference types rather than plain pointers.\\nUsing functionality from native code libraries requires writing vapi files, defining the library interfacing."],"rdfs:label":["Vala"],"ns:common.topic.official_website":["<http://live.gnome.org/Vala>"],"ns:common.topic.topical_webpage":["<http://live.gnome.org/Vala>"],"ns:common.topic.article":[{"ns:common.document.text":["Vala is a new programming language that aims to bring modern\\nprogramming language features to GNOME developers without imposing any\\nadditional runtime requirements and without using a different ABI\\ncompared to applications and libraries written in C.<br><br>valac, the Vala compiler, is a self-hosting compiler that translates\\nVala source code into C source and header files. It uses the GObject\\ntype system to create classes and interfaces declared in the Vala\\nsource code. It's also planned to generate GIDL files when\\ngobject-introspection is ready.<br><br>valac produces C source and header files from Vala source files as if\\nyou've written your library or application directly in C. Using a Vala\\nlibrary from a C application won't look different than using any other\\nGObject-based library. There won't be a vala runtime library and\\napplications can distribute the generated C code with their tarballs,\\nso there are no additional run- or build-time dependencies for users."],"ns:common.document.source_uri":["<http://wp/en/12655903>"],"rdf:type":["ns:common.document"],"ns:common.document.content":["ns:m.02xj4fv"]}],"ns:common.topic.webpage":[{"ns:common.webpage.description":["Vala Homepage"],"ns:common.webpage.category":["ns:m.08mbj5d"],"ns:common.webpage.resource":["ns:m.0bl80np"],"ns:common.webpage.uri":["<http://live.gnome.org/Vala>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.02wz_qj"]}],"ns:computer.programming_language.language_designers":["Raffaele Sandrini"],"ns:computer.programming_language.introduced":["2006"],"ns:type.object.name":["Vala"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125f_5qch"],"ns:computer.programming_language.language_paradigms":["ns:m.06w_b"],"ns:computer.programming_language.influenced_by":["ns:m.0jgqg"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}