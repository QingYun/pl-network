{"ns:m.0brz3l":{"ns:common.topic.description":["Portable Standard Lisp is a tail-recursive dynamically bound dialect of Lisp inspired by its predecessor, Standard Lisp and the Portable Lisp Compiler. It was developed by researchers at the University of Utah in 1980, which released PSL 3.1; development was handed over to developers at Hewlett-Packard in 1982 who released PSL 3.3 and up. Portable Standard Lisp was available as a kit containing a screen editor, a compiler, and an interpreter for the 68000 processor architecture, DEC-20s, CRAY-1s, and the VAX architecture. Today, PSL is mainly developed by and available from Konrad-Zuse-Zentrum für Informationstechnik Berlin. Its main modern use is as underlying language for implementations of Reduce.\\nLike most older lisps, PSL in the first step compiles Lisp to LAP code, which is a platform independent language in its own. However, where older lisps mostly compiled LAP directly to assembler or some architecture dependent intermediate, PSL compiles the LAP to C code, which would run in a virtual machine language; so programs written in it in principle are as portable as C itself, which is very portable."],"rdfs:label":["Portable Standard Lisp"],"key:en":["portable_standard_lisp"],"ns:common.topic.article":[{"ns:common.document.text":["Portable Standard Lisp (PSL) is a tail-recursive dynamically bound dialect of Lisp inspired by its predecessor, Standard Lisp and the Portable Lisp Compiler. It was developed by researchers at the University of Utah in 1980, which released PSL 3.1; development was handed over to developers at Hewlett-Packard in 1982 who released PSL 3.3 and up. Portable Standard Lisp was available as a kit containing a screen editor, a compiler, and an interpreter for the 68000 processor architecture, DEC-20s, CRAY-1s, and the VAX architecture (among many others). Today, PSL is mainly developed by and available from Konrad-Zuse-Zentrum für Informationstechnik Berlin. Its main modern use is as underlying language for implementations of Reduce.\\nLike most older lisps, PSL in the first step compiles Lisp to LAP code, which is a platform independent language in its own. However, where older lisps mostly compiled LAP directly to assembler or some architecture dependent intermediate, PSL compiles the LAP to C code, which would run in a virtual machine language; so programs written in it in principle are as portable as C itself, which is very portable. The compiler itself was written in PSL or a more"],"ns:common.document.source_uri":["<http://wp/en/4243267>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Portable Standard Lisp"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1259_nvdg"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.parent_language":["ns:m.04kyw"]}}