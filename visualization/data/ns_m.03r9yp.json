{"ns:m.03r9yp":{"ns:common.topic.description":["Alma-0 is a multi-paradigm computer programming language. This language is an augmented version of the imperative Modula-2 language with logic-programming features and convenient backtracking capability. It is small, strongly typed, and combines constraint programming, a limited number of features inspired by logic programming and supports imperative paradigms. The language advocates declarative programming, the designers claim that search-oriented solutions built with it are substantially simpler than their counterparts written in purely imperative or logic programming style. Alma-0 provides natural, high-level constructs for the construction of search trees."],"rdfs:label":["Alma-0"],"key:en":["alma-0"],"ns:common.topic.official_website":["<http://www.cwi.nl/en/alma/>"],"ns:computer.programming_language.language_designers":["Vincent Partington"],"ns:common.topic.article":[{"ns:common.document.text":["Alma-0 is a multi-paradigm computer programming language. This language is an augmented version of the imperative Modula-2 language with logic-programming features and convenient backtracking capability. It is small, strongly typed, and combines constraint programming, a limited number of features inspired by logic programming and supports imperative paradigms. The language advocates declarative programming, the designers claim that search-oriented solutions built with it are substantially simpler than their counterparts written in purely imperative or logic programming style. Alma-0 provides natural, high-level constructs for the construction of search trees.\\nSince the designers of Alma-0 wanted to create a distinct and substantially simpler proposal than previous attempts at integration of declarative programming constructs (such as automatic backtracking) into imperative programming, the design of Alma-0 was guided by the following four principles:\\nAlma-0 can be viewed not only as a specific and concrete programming language proposal, but also as an example of a generic method for extending any imperative programming language with features that support declarative"],"ns:common.document.source_uri":["<http://wp/en/933674>"],"rdf:type":["ns:common.document"]}],"ns:common.topic.webpage":[{"ns:common.webpage.uri":["<http://www.cwi.nl/en/alma/>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.03r9yp"]}],"ns:computer.programming_language.introduced":["2004"],"ns:type.object.name":["Alma-0"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1257xhlrx"],"ns:computer.programming_language.language_paradigms":["ns:m.04k52"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.057fd"]}}