{"ns:m.0b4rvq":{"ns:common.topic.description":["SAM76 is a macro programming language used from the late 1970s to the present 2007 initially ran on CP/M.\\nThe SAM76 language is a list and string processor designed for interactive and user-directed applications, including artificial intelligence programming, and permits high portability from machine to machine. The language shares certain features in common with LISP, Forth, and shell programming languages of the UNIX operating system. Claude A. R. Kagan, the language's developer, sought to combine within a single interpretive processor, the characteristics of two different string and general-purpose macro generators and the provisions to embed multiple infix operator mathematical systems.\\nSAM76 language was designed to:\\nbe very pure syntactically and semantically;\\nrequire a minimum of user keyboarding to achieve powerful results;\\nfit in a very small computer system;\\npermit editing, testing, and executing modules interactively;\\nnot prevent the user from doing strange things with the syntax of the language yielding, however, predictable results.\\nThe language was based around the idea of programming with macros."],"rdfs:label":["SAM76"],"key:en":["sam76"],"ns:common.topic.article":[{"ns:common.document.text":["SAM76 is a macro programming language used from the late 1970s to the present 2007 initially ran on CP/M.\\nThe SAM76 language is a list and string processor designed for interactive and user-directed applications, including artificial intelligence programming, and permits high portability from machine to machine. The language shares certain features in common with LISP, Forth, and shell programming languages of the UNIX operating system. Claude A. R. Kagan, the language's developer, sought to combine within a single interpretive processor, the characteristics of two different string and general-purpose macro generators and the provisions to embed multiple infix operator mathematical systems.\\nSAM76 language was designed to:\\nThe language was based around the idea of programming with macros. A user will define a macro (a code word that can be defined by the user to invoke a specific set of instructions to perform a routine within the program) to execute a set of instructions, usually in either machine or assembly language, and use the macro in the program. In this way, a user need only define a routine once and then when that particular operation, or string is required, the user can"],"ns:common.document.source_uri":["<http://wp/en/3879739>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["SAM76"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.12598s269"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}