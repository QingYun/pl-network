{"ns:m.0vgmh":{"ns:common.topic.description":["UnrealScript is the scripting language that Unreal Engine used for authoring game code and gameplay events before the release of Unreal Engine 4. The language was designed for simple, high-level game programming. The UnrealScript interpreter was programmed by Tim Sweeney, who also created an earlier game scripting language, ZZT-oop.\\nSimilar to Java, UnrealScript is object-oriented without multiple inheritance, and classes are defined in individual files named for the class they define. Unlike Java, UnrealScript does not have object wrappers for primitive types. Interfaces are only supported in Unreal Engine generation 3 and a few Unreal Engine 2 games. UnrealScript supports operator overloading, but not method overloading, except for optional parameters.\\nBy making the process of modifying games easier, UnrealScript helped enable the growth of a large modding community around the Unreal series. This greatly added to the overall longevity of Unreal and provided an incentive for new development."],"rdfs:label":["UnrealScript"],"key:en":["unrealscript"],"ns:common.topic.official_website":["<http://www.udn.epicgames.com/>"],"ns:common.topic.webpage":[{"ns:common.webpage.uri":["<http://udn.epicgames.com/>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.0vgmh"]}],"ns:common.topic.article":[{"ns:common.document.text":["UnrealScript (often abbreviated to UScript) is the scripting language of the Unreal Engine and is used for authoring game code and gameplay events.\\nSimilar in basic design principles to Java, UnrealScript has object-oriented features but does not support multiple inheritance: classes all inherit from a common Object class and are defined in individual files named after each class. Unlike Java, UnrealScript is case-insensitive, and does not have object wrappers for primitive types. Interfaces are only supported in Unreal Engine generation 3 and a few Unreal Engine 2 games. UnrealScript supports operator overloading, but not method overloading, except for optional parameters.\\nThe language was also designed for simple, high-level game programming. The UnrealScript interpreter was programmed by Tim Sweeney, who had also created an earlier game scripting language called ZZT-oop.\\nBy making the process of modifying the game easier, UnrealScript helped enable the growth of a large community of people on the Internet dedicated to modifying Unreal. This ability greatly added to the overall longevity of Unreal and provided an incentive for new development.\\nUnrealScript uses two commenting"],"ns:common.document.source_uri":["<http://wp/en/118373>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.introduced":["1998"],"ns:type.object.name":["UnrealScript"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125958g9w"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.language_paradigms":["ns:m.0qjrr"],"ns:computer.programming_language.influenced_by":["ns:m.0jgqg"]}}