{"ns:m.08pytf":{"ns:common.topic.description":["Spec# is a programming language with specification language features that extends the capabilities of the C# programming language with Eiffel-like contracts, including object invariants, preconditions and postconditions. Like ESC/Java, it includes a static checking tool based on a theorem prover that is able to statically verify many of these invariants. It also includes a variety of other minor extensions to the language, such as non-null reference types.\\nThe code contracts API in the .NET Framework 4.0 has evolved with Spec#.\\nMicrosoft Research developed both Spec# and C#; in turn, Spec# serves as the foundation of the Sing# programming language, which Microsoft Research also developed."],"rdfs:label":["Spec#"],"key:en":["spec_sharp"],"ns:common.topic.official_website":["<http://research.microsoft.com/specsharp/>"],"ns:common.topic.webpage":[{"ns:common.webpage.category":["ns:m.08mbj5d"],"ns:common.webpage.resource":["ns:m.0bk87gt"],"ns:common.webpage.uri":["<http://research.microsoft.com/specsharp/>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.08pytf"]}],"ns:computer.programming_language.developers":["Microsoft Research"],"ns:common.topic.article":[{"ns:common.document.text":["Spec# is a programming language with specification language features that extends the capabilities of the C# programming language with Eiffel-like contracts, including object invariants, preconditions and postconditions. Like ESC/Java, it includes a static checking tool based on a theorem prover that is able to statically verify many of these invariants. It also includes a variety of other minor extensions to the language, such as non-null reference types.\\nThe code contracts API in the .NET Framework 4.0 has evolved with Spec#.\\nMicrosoft Research developed both Spec# and C#; in turn, Spec# serves as the foundation of the Sing# programming language, which Microsoft Research also developed.\\nSpec# extends the core C# programming language with features such as:\\nThis example shows two of the basic structures that are used when adding contracts to your code (try Spec# in your browser)."],"ns:common.document.source_uri":["<http://wp/en/3078904>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.introduced":["2004"],"ns:type.object.name":["Spec#"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125dx7yx0"],"ns:computer.programming_language.language_paradigms":["ns:m.0gxhd"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.07657k"],"ns:computer.programming_language.parent_language":["ns:m.07657k"],"ns:computer.programming_language.influenced":["ns:m.08pndh"]}}