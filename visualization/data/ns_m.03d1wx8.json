{"ns:m.03d1wx8":{"rdfs:label":["Apply"],"ns:common.topic.description":["In mathematics and computer science, Apply is a function that applies functions to arguments. It is central to programming languages derived from lambda calculus, such as LISP and Scheme, and also in functional languages. In particular, it has a role in the study of the denotational semantics of computer programs, because it is a continuous function on complete partial orders.\\nIn category theory, Apply is important in Cartesian closed categories, where it is a universal morphism, right adjoint to currying."],"key:en":["apply"],"ns:common.topic.image":[{"ns:type.content.length":["3335"],"rdfs:label":["Universal property of the exponential object"],"ns:type.content.blob_id":["d99157922eeddba18cdc7f54f6c510e65876de6f838dd05dd86c7f2eb93749da"],"ns:common.licensed_object.provenance":["wikipedia,commons,336781"],"ns:type.content.source":["ns:m.02g0yqn"],"ns:common.image.size":["ns:m.02g0yr0"],"ns:common.licensed_object.license":["ns:m.05smz"],"ns:type.content.media_type":["ns:m.08y0"],"ns:type.object.name":["Universal property of the exponential object"],"rdf:type":["ns:type.content"],"ns:common.image.appears_in_topic_gallery":["ns:m.06y9br"]}],"ns:common.topic.article":[{"ns:common.document.text":["In mathematics and computer science, Apply is a function that applies functions to arguments. It is central to programming languages derived from lambda calculus, such as LISP and Scheme, and also in functional languages. In particular, it has a role in the study of the denotational semantics of computer programs, because it is a continuous function on complete partial orders.\\nIn category theory, Apply is important in Cartesian closed categories, (and thus, also in Topos theory), where it is a universal morphism, right adjoint to currying.\\nIn computer programming, apply applies a function to a list of arguments. Eval and apply are the two interdependent components of the eval-apply cycle, which is the essence of evaluating Lisp, described in SICP.\\nApply is also the name of a special function in many languages, which takes a function and a list, and uses the list as the function's own argument list, as if the function were called with the elements of the list as the arguments. This is important in languages with variadic functions, because this is the only way to call a function with an indeterminate (at compile time) number of arguments.\\nIn Common Lisp apply is a function that"],"ns:common.document.source_uri":["<http://wp/en/14370620>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Apply"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1255tj02j"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}