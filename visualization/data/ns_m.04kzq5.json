{"ns:m.04kzq5":{"key:user.avh.ellerdale":["009d-0352"],"ns:user.avh.default_domain.ellerdale_topic.ellerdale_id":["009d-0352"],"ns:common.topic.description":["In Unix-like computer operating systems, a pipeline is a set of processes chained by their standard streams, so that the output of each process feeds directly as input to the next one. Filter programs are often used in this configuration.\\nThe concept of pipelines was invented by Douglas McIlroy at Unix's ancestral home of Bell Labs, prior to the actual invention of the operating system, and implemented in Unix at his insistence, shaping its toolbox philosophy. It is named by analogy to a physical pipeline. The standard shell syntax for pipelines is to list multiple programs to invoke in one command, separated by vertical bars:\\nEach program is assumed to take input and give output on its standard streams. Each \\\"|\\\" tells the shell to connect the standard output of the left program to the standard input of the right program by an inter-process communication mechanism called an pipe, implemented in the operating system. Since pipes are unidirectional, data flows through the pipeline from left to right.\\nFor example, to list files in the current directory, retain only the lines of ls output containing the string \\\"key\\\", and view the result in a scrolling page, one can issue the command:"],"rdfs:label":["Pipeline"],"ns:common.topic.article":[{"ns:common.document.text":["In Unix-like computer operating systems (and, to some extent, Microsoft Windows), a pipeline is the original software pipeline: a set of processes chained by their standard streams, so that the output of each process (stdout) feeds directly as input (stdin) to the next one. Each connection is implemented by an anonymous pipe. Filter programs are often used in this configuration.\\nThe concept was invented by Douglas McIlroy for Unix shells and it was named by analogy to a physical pipeline.\\nUnix pipeline can be thought of as left associative infix operation whose operands are programs with parameters. Programatically all programs in pipeline run at the same time (in parallel), but, looking at syntax, it can be thought that one runs after another. It is a functional composition. One can be reminded of functional programming, where data is passed from one function to another (as their input or output).\\nAll widely used Unix and Windows shells have a special syntax construct for the creation of pipelines. In typical usage one writes the filter commands in sequence, separated by the ASCII vertical bar character \\\"|\\\" (which, for this reason, is often called \\\"pipe character\\\"). The shell"],"ns:common.document.source_uri":["<http://wp/en/1236117>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Pipeline"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1yl5lyzh2"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced":["ns:m.0qscfl7"]}}