{"ns:m.04h4mm":{"rdfs:label":["EGL"],"ns:common.topic.description":["EGL, originally developed by IBM and now available as the EDT Open Source project under the Eclipse Public License, is a programming technology designed to meet the challenges of modern, multi-platform application development by providing a common language and programming model across languages, frameworks, and runtime platforms. The language borrows concepts familiar to anyone using statically typed languages like Java, COBOL, C, etc. However, it borrows the concept of stereotype from Unified Modeling Language that is not typically found in statically typed programming languages.\\nIn a nutshell, EGL is a higher-level, universal application development language.\\nEGL is similar in syntax to other common languages so it can be learned by application developers with similar previous programming background. EGL application development abstractions shield programmers from the technical interfaces of systems and middleware allowing them to focus on building business functionality."],"key:en":["enterprise_generation_language"],"ns:computer.programming_language.developers":["IBM"],"ns:common.topic.article":[{"ns:common.document.text":["EGL (Enterprise Generation Language), originally developed by IBM and now available as the EDT (EGL Development Tools) Open Source project under the EPL (Eclipse Public License), is a programming technology designed to meet the challenges of modern, multi-platform application development by providing a common language and programming model across languages, frameworks, and runtime platforms. The language borrows concepts familiar to anyone using statically typed languages like Java, COBOL, C, etc. However, it borrows the concept of Stereotype from UML (Universal Modeling Language) that is not typically found in statically typed programming languages.\\nIn a nutshell, EGL is a higher-level, universal application development language.\\nEGL is similar in syntax to other common languages so it can be learned by application developers with similar previous programming background. EGL application development abstractions shield programmers from the technical interfaces of systems and middleware allowing them to focus on building business functionality. EGL applications and services are written, tested and debugged at the EGL source level, and once they are satisfactorily functionally tested"],"ns:common.document.source_uri":["<http://wp/en/1205107>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.introduced":["2005"],"ns:type.object.name":["EGL"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125fbly3v"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}