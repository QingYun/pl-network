{"ns:m.073yv":{"ns:common.topic.description":["Sather is an object-oriented programming language. It originated circa 1990 at the International Computer Science Institute at the University of California, Berkeley, developed by an international team led by Steve Omohundro. It supports garbage collection and generics by subtypes.\\nOriginally, it was based on Eiffel, but it has diverged, and now includes several functional programming features. It is probably best to view it as an object-oriented language, with many ideas borrowed from Eiffel.\\nEven the name is inspired by Eiffel; the Sather Tower is a recognizable landmark at Berkeley, named after Jane Krom Sather, the widow of Peder Sather, who donated large sums to the foundation of the university.\\nSather also takes inspiration from other programming languages and paradigms: iterators, design by contract, abstract classes, multiple inheritance, anonymous functions, operator overloading, contravariant type system.\\nThe original Berkeley implementation has been adopted by the Free Software Foundation therefore becoming GNU Sather. Last stable GNU version was released in July 2007 and the software is currently not maintained."],"rdfs:label":["Sather"],"key:en":["sather"],"ns:common.topic.article":[{"ns:common.document.text":["Sather is an object-oriented programming language. It originated circa 1990 at the International Computer Science Institute (ICSI) at the University of California, Berkeley, developed by an international team led by Steve Omohundro. It supports garbage collection and generics by subtypes.\\nOriginally, it was based on Eiffel, but it has diverged, and now includes several functional programming features. It is probably best to view it as an object-oriented language, with many ideas borrowed from Eiffel.\\nEven the name is inspired by Eiffel; the Sather Tower is a recognizable landmark at Berkeley, named after Peder Sather who donated large sums to the foundation of the university.\\nSather also takes inspiration from other programming languages and paradigms: iterators, design by contract, abstract classes, multiple inheritance, anonymous functions, operator overloading, contravariant type system. Some of these features are normally only found in functional programming languages.\\nThe original Berkeley implementation (last stable version 1.1 was released in 1995, no longer maintained ) has been adopted by the Free Software Foundation therefore becoming GNU Sather. Last stable GNU version"],"ns:common.document.source_uri":["<http://wp/en/28763>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.introduced":["1990"],"ns:type.object.name":["Sather"],"rdf:type":["ns:user.skud.names.topic"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1256y73vm"],"ns:symbols.namesake.named_after":["ns:m.014v82"],"ns:computer.programming_language.influenced_by":["ns:m.06zrb"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.language_paradigms":["ns:m.05prj"],"ns:computer.programming_language.influenced":["ns:m.0dsbpg6"]}}