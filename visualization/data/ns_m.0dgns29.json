{"ns:m.0dgns29":{"ns:common.topic.description":["Cornell University Programming Language is a procedural computer programming language developed at Cornell University in the late 1960s.\\nCUPL was based on an earlier Cornell-developed programming language, CORC. It was used to teach introductory computer programming classes.\\nCUPL was developed by R. W. Conway, W. L. Maxwell, G. Blomgren, Howard Elder, H. Morgan, C. Pottle, W. Riddle, and Robert Walker. CUPL had a very simple syntax similar to BASIC and to PL/I. The processor was designed to offer extensive error correction and diagnostic capabilities. This would allow student programs to execute even if they contained minor syntax errors. The compiler also included spelling correction capabilities so that if a variable name is referenced only once, the compiler would assume that it was a misspelling of some other intended name.\\nCUPL also offered an extensive set of matrix operations and offered dynamic run-time memory allocation. At the time, Cornell's computer was an IBM System 360 Model 40 with only 64K of core memory."],"rdfs:label":["Cornell University Programming Language"],"ns:common.topic.article":[{"ns:common.document.text":["Cornell University Programming Language (also called CUPL) is a procedural computer programming language developed at Cornell University in the late 1960s.\\nCUPL was based on an earlier Cornell-developed programming language, CORC. It was used to teach introductory computer programming classes.\\nCUPL was developed by R. W. Conway, W. L. Maxwell, G. Blomgren, Howard Elder, H. Morgan, C. Pottle, W. Riddle, and Robert Walker. CUPL had a very simple syntax similar to BASIC and to PL/I. The processor was designed to offer extensive error correction and diagnostic capabilities. This would allow student programs to execute even if they contained minor syntax errors. The compiler also included spelling correction capabilities so that if a variable name is referenced only once, the compiler would assume that it was a misspelling of some other intended name.\\nCUPL also offered an extensive set of matrix operations and offered dynamic run-time memory allocation. At the time, Cornell's computer was an IBM System 360 Model 40 with only 64K of core memory. CUPL was able to process a large batch of student programs quickly by remaining resident in core memory, but the compiler occupied 58K of"],"ns:common.document.source_uri":["<http://wp/en/29012502>"],"rdf:type":["ns:common.document"]}],"ns:type.object.name":["Cornell University Programming Language"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1yl5m_n2g"],"ns:common.topic.notable_types":["ns:m.01xrl_t"]}}