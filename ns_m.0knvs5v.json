{"ns:m.0knvs5v":{"rdfs:label":["ParaSail"],"ns:common.topic.description":["ParaSail, Parallel Specification and Implementation Language, is an object-oriented parallel programming language. The design and ongoing implementation of ParaSail is described in a blog and on its official website.\\nParaSail uses a pointer-free programming model, where objects can grow and shrink, and value semantics are used for assignment. There is no global garbage collected heap. Region-based storage management is used throughout. Types can be recursive, so long as the recursive components are declared as optional. There are no global variables, no parameter aliasing, and all subexpressions of an expression can be evaluated in parallel. Assertions, preconditions, postconditions, class invariants, etc., are part of the standard syntax, using a Hoare-like notation. Any possible race conditions are detected at compile time.\\nThe initial design of ParaSail was started in September 2009 by S. Tucker Taft.\\nBoth an interpreter using the ParaSail virtual machine, and an LLVM-based ParaSail compiler are available. Work stealing is used for scheduling ParaSail's light-weight threads. The latest version can be downloaded from the ParaSail website."],"ns:common.topic.article":[{"ns:common.document.source_uri":["<http://wp/en/36619168>"],"rdf:type":["ns:common.document"]}],"ns:common.topic.webpage":[{"ns:common.webpage.uri":["<http://parasail-programming-language.blogspot.com>"],"rdf:type":["ns:common.webpage"],"ns:common.webpage.topic":["ns:m.0knvs5v"]}],"ns:computer.programming_language.introduced":["2009"],"ns:type.object.name":["ParaSail"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.1yl5t5g6c"],"ns:computer.programming_language.language_paradigms":["ns:m.06w_b"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.0n6y"]}}