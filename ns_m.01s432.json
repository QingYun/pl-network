{"ns:m.01s432":{"ns:common.topic.description":["Information Processing Language is a programming language created by Allen Newell, Cliff Shaw, and Herbert A. Simon at RAND Corporation and the Carnegie Institute of Technology at about 1956. Newell had the job of language specifier-application programmer, Shaw was the system programmer, and Simon took the job of application programmer-user.\\nThe language includes features intended to help with programs that perform simple problem solving actions such as lists, dynamic memory allocation, data types, recursion, functions as arguments, generators, and cooperative multitasking. IPL invented the concept of list processing, albeit in an assembly-language style."],"rdfs:label":["Information Processing Language"],"key:en":["information_processing_language"],"ns:base.schemastaging.context_name.pronunciation":[{"ns:base.schemastaging.pronunciation.yomigana":["IPL)とは"],"rdf:type":["ns:base.schemastaging.pronunciation"]}],"ns:computer.programming_language.language_designers":["Allen Newell"],"ns:common.topic.article":[{"ns:common.document.text":["Information Processing Language (IPL) is a programming language developed by Allen Newell, Cliff Shaw, and Herbert A. Simon at RAND Corporation and the Carnegie Institute of Technology from about 1956. Newell had the role of language specifier-application programmer, Shaw was the system programmer and Simon took the role of application programmer-user.\\nThe language includes features intended to support programs that could perform general problem solving, including lists, associations, schemas (frames), dynamic memory allocation, data types, recursion, associative retrieval, functions as arguments, generators (streams), and cooperative multitasking. IPL pioneered the concept of list processing, albeit in an assembly-language style.\\nAn IPL computer has:\\nThe main data structure of IPL is the list, but lists are more intricate structures than in many languages. A list consists of a singly linked sequence of symbols, as might be expected -- plus some description lists, which are subsidiary singly linked lists interpreted as alternating attribute names and values. IPL provides primitives to access and mutate attribute value by name. The description lists are given local names (of the"],"ns:common.document.source_uri":["<http://wp/en/303031>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.developers":["Herbert A. Simon"],"ns:computer.programming_language.introduced":["1956"],"ns:type.object.name":["Information Processing Language"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125ct4rw_"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced":["ns:m.04kyw"]}}