{"ns:m.042v27":{"ns:common.topic.description":["Object-Oriented Turing is an extension of the Turing programming language and a replacement for Turing Plus created by Ric Holt of the University of Toronto, Canada, in 1991. It is imperative, object-oriented, and concurrent. It has modules, classes, single inheritance, processes, exception handling, and optional machine-dependent programming.\\nThere is an integrated development environment under the X Window System and a demo version. Versions exist for Sun-4, MIPS, RS-6000, NeXTSTEP, Windows 95 and others."],"rdfs:label":["Object-Oriented Turing"],"key:en":["object-oriented_turing"],"ns:common.topic.article":[{"ns:common.document.text":["Object-Oriented Turing is an extension of the Turing programming language and a replacement for Turing Plus created by Ric Holt of the University of Toronto in 1991. It is imperative, object-oriented, and concurrent. It has modules, classes, single inheritance, processes, exception handling, and optional machine-dependent programming.\\nThere is an integrated development environment under the X Window System and a demo version. Versions exist for Sun-4, MIPS, RS-6000, NeXTSTEP, Windows 95 and others.\\nThis article is based on material taken from the Free On-line Dictionary of Computing prior to 1 November 2008 and incorporated under the \\\"relicensing\\\" terms of the GFDL, version 1.3 or later."],"ns:common.document.source_uri":["<http://wp/en/1064082>"],"rdf:type":["ns:common.document"]}],"ns:computer.programming_language.introduced":["1991"],"ns:type.object.name":["Object-Oriented Turing"],"rdf:type":["ns:computer.programming_language"],"ns:kg.object_profile.prominent_type":["ns:computer.programming_language"],"ns:common.topic.notable_for":["ns:g.125cng30c"],"ns:computer.programming_language.language_paradigms":["ns:m.07phw8"],"ns:common.topic.notable_types":["ns:m.01xrl_t"],"ns:computer.programming_language.influenced_by":["ns:m.07n77"],"ns:computer.programming_language.parent_language":["ns:m.07n77"]}}